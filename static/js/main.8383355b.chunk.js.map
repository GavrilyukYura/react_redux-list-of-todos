{"version":3,"sources":["store/loading.ts","store/currentTodo.ts","store/index.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["selectors","loading","loadingReducer","action","type","todo","todoReduser","actions","startLoading","finishLoading","selectTodo","usSelectTodo","state","loadingSelectors","selectedTodoSelector","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","todos","selectedTodo","dispatch","useDispatch","className","map","classNames","id","completed","title","onClick","TodoFilter","filtredTodos","useState","query","setQuery","status","setStatus","useEffect","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","onClose","user","setUser","isLoading","setIsLoading","userId","person","href","email","name","App","todosFromServer","setTodosFromServer","visibleTodos","setVisibleTotos","useSelector","a","filter","includes","find","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8383355b.chunk.js","sourcesContent":["type StartLoadingAction = {\n  type: 'START_LOADING',\n};\n\ntype FinishLoadingAction = {\n  type: 'FINISH_LOADING',\n};\n\ntype Action = (\n  StartLoadingAction\n  | FinishLoadingAction\n);\n\nconst loadingReducer = (loading = false, action: Action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return true;\n\n    case 'FINISH_LOADING':\n      return false;\n\n    default:\n      return loading;\n  }\n};\n\nexport const actions = {\n  startLoading: () => ({ type: 'START_LOADING' }),\n  finishLoading: () => ({ type: 'FINISH_LOADING' }),\n};\n\nexport const selectors = {\n  isLoading: (loading: boolean) => loading,\n};\n\nexport default loadingReducer;\n","import { Todo } from '../types/Todo';\n\ntype SelectTodo = {\n  type: 'SELECT_TODO'\n  todo: Todo\n};\n\ntype UnSelectTodo = {\n  type: 'UNSELECT_TODO'\n};\n\ntype TodoAction = (SelectTodo | UnSelectTodo);\n\nexport const actions = {\n  selectTodo: (todo: Todo) => ({\n    type: 'SELECT_TODO',\n    todo,\n  }),\n\n  usSelectTodo: () => ({\n    type: 'UNSELECT_TODO',\n  }),\n};\n\nconst todoReduser = (todo = null, action: TodoAction): Todo | null => {\n  switch (action.type) {\n    case 'SELECT_TODO':\n      return action.todo;\n\n    case 'UNSELECT_TODO':\n      return null;\n\n    default:\n      return todo;\n  }\n};\n\nexport const selectors = {\n  selectedTodo: (todo: Todo) => todo,\n};\n\nexport default todoReduser;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Todo } from '../types/Todo';\nimport loadingReducer, {\n  actions as loadingActions,\n  selectors as loadingSelectors,\n} from './loading';\nimport todoReduser, {\n  actions as selectedTodoActions,\n  selectors as selectedTodoSelector,\n} from './currentTodo';\n\nexport const actions = {\n  loadingActions,\n  selectedTodoActions,\n};\n\nexport const selectors = {\n  isLoading: (state: { loading: boolean }) => (\n    loadingSelectors.isLoading(state.loading)),\n\n  selectedTodo: (state: { todo: Todo }) => (\n    selectedTodoSelector.selectedTodo(state.todo)),\n};\n\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  todo: todoReduser,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n","import classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../store';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={\n              classNames(\n                { 'has-background-info-light': selectedTodo?.id === todo.id },\n              )\n            }\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <i className=\"fas fa-check\" />\n                </td>\n              )\n              : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(\n                  actions.selectedTodoActions.selectTodo(todo),\n                )}\n              >\n                <span className=\"icon\">\n                  {selectedTodo?.id === todo.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\ntype Props = {\n  filtredTodos: (value: string, status: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filtredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    filtredTodos(query, status);\n  }, [query, status]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              setStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            setQuery((event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | undefined;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(person => {\n          setUser(person);\n          setIsLoading(true);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo?.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nimport './App.scss';\n\nimport { actions, selectors } from './store';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTotos] = useState<Todo[]>([]);\n\n  const selectedTodo = useSelector(selectors.selectedTodo);\n  const isLoading = useSelector(selectors.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loading = async () => {\n      setTodosFromServer(await getTodos());\n      setVisibleTotos(await getTodos());\n      dispatch(actions.loadingActions.startLoading());\n    };\n\n    loading();\n  }, []);\n\n  const filtredTodos = (value: string, status: string) => {\n    const todos = todosFromServer.filter(todo => {\n      switch (status) {\n        case 'completed':\n          return todo.completed && todo.title.includes(value);\n        case 'active':\n          return !todo.completed && todo.title.includes(value);\n        default:\n          return todo.title.includes(value);\n      }\n    });\n\n    setVisibleTotos(todos);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filtredTodos={filtredTodos} />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={visibleTodos.find(todo => todo.id === selectedTodo.id)}\n          onClose={() => dispatch(\n            actions.selectedTodoActions.usSelectTodo(),\n          )}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}